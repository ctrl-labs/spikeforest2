#!/usr/bin/env python

import shutil
import json
import argparse
import spikeforest_widgets as sw
import hither_sf as hither
import kachery as ka
from spikeforest2 import sorters

def main():
    parser = argparse.ArgumentParser(description='Run spike sorting')
    parser.add_argument('recording', help='Path to the recording to sort')
    parser.add_argument('--algorithm', '-a', help='Name of the algorithm to use: mountainsort4, ironclust, kilosort2, spykingcircus, herdingspikes2', required=True)
    parser.add_argument('--output', '-o', help='Optional path to the output sorting file', required=False, default=None)
    parser.add_argument('--cache', help='Optional cache to use: e.g., "local" if mongodb is installed.', required=False, default=None)

    args = parser.parse_args()

    algorithm = args.algorithm
    recording_path = args.recording
    sorting_out_path = args.output
    cache = args.cache

    with ka.config(fr='default_readonly'):
        with hither.config(container='default', cache=cache):
            sorting_path = sorters.sort(algorithm=algorithm, recording_path=recording_path)
            print('SORTING: {}'.format(sorting_path))
            if sorting_out_path is not None:
                shutil.copyfile(sorting_path, sorting_out_path)
            

if __name__ == "__main__":
    main()
